{"version":3,"sources":["helpers/graph.js","hooks/graph.js","components/Graph/CitationGraph.js","components/Search/Search.js","components/DataVizPage/CitationPage.js","components/Graph/CoauthorshipGraph.js","components/DataVizPage/CoauthorshipPage.js","components/NavCard.js","views/Home.js","components/Navbar.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["constrainPositionToBoundingBox","element","coordinate","boxWidth","boxHeight","boundary","Math","max","min","ticked","nodeElements","linkElements","width","height","attr","d","source","target","getD3ElementLifecycle","enter","append","update","exit","remove","getColorScale","domain","colorRange","d3","range","useLoadData","fileName","useState","data","setData","loadData","useCallback","a","loadedData","useEffect","useSearchWithNodeHighlighting","searcher","searchInput","setSearchInput","useDebounce","debouncedSearchInput","highlighted","setHighlighted","lowerSearchInput","useMemo","toLower","newHighlighted","map","id","isHighlighted","document","getElementById","setAttribute","WIDTH","HEIGHT","COLOR_RANGE","ARROW_MARKER_ID","getCiteNodeRadius","sqrt","citedBy","PI","getCiteCollisionRadius","Graph","markerId","setSelectedNode","links","setLinks","nodes","setNodes","citedByDomain","svg","style","simulationRef","useRef","computeNodesAndLinks","nodeIdsObj","indexBy","prop","reduce","accum","title","citations","paperLinks","compose","citation","filter","p","selectAll","join","lower","on","ev","authors","keywords","authorNames","author","forename","surname","current","alphaDecay","force","strength","x","y","simulationStop","setTimeout","stop","clearTimeout","viewBox","memo","Search","className","value","setValue","placeholder","onChange","CitationPage","formattedData","setFormattedData","undefined","selectedNode","updatedData","paper","authorsString","stringToCompare","includes","input","equals","parseInt","numberOfCitationsInput","setNumberOfCitationsInput","year","yearSearchInput","setYearSearchInput","gt","yearFromSearchInput","setYearFromSearchInput","lt","yearToSearchInput","setYearToSearchInput","length","CitationGraph","NODE_COLOR_RANGE","NODE_SIZE_RANGE","STROKE_SIZE_RANGE","getAuthorNodeRadius","authorshipDomain","values","pathOr","papers","console","log","papersCountDomain","papersCount","keys","mapObjIndexed","sort","b","firstAuthor","secondAuthor","coauthorships","fullName","distanceMin","distanceMax","distance","tQuarter","thresholds","radialPositionScale","CoauthorshipPage","formattedAuthorsForSearch","i","CoauthorshipGraph","NavCard","props","to","backgroundImage","bannerImage","subtitle","Home","Navbar","text","window","location","hash","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yZAEMA,EACJ,SAACC,EAASC,GAAV,OACA,WAAwC,IAAvCC,EAAsC,uDAA3B,IAAMC,EAAqB,uDAAT,IACtBC,EAA0B,MAAfH,EAAqBC,EAAWC,EACjD,OAAOE,KAAKC,IAAI,GAAID,KAAKE,IAAIH,EAAW,GAAIJ,EAAQC,OAG3CO,EAAS,SAACC,EAAcC,EAAcC,EAAOC,GAApC,OAA+C,WACnEF,EACGG,KAAK,MAAM,SAACC,GAAD,OAAOf,EAA+Be,EAAEC,OAAQ,IAAzChB,CAA8CY,EAAOC,MACvEC,KAAK,MAAM,SAACC,GAAD,OAAOf,EAA+Be,EAAEC,OAAQ,IAAzChB,CAA8CY,EAAOC,MACvEC,KAAK,MAAM,SAACC,GAAD,OAAOf,EAA+Be,EAAEE,OAAQ,IAAzCjB,CAA8CY,EAAOC,MACvEC,KAAK,MAAM,SAACC,GAAD,OAAOf,EAA+Be,EAAEE,OAAQ,IAAzCjB,CAA8CY,EAAOC,MAE1EH,EAAaI,KAAK,aAAa,SAAUC,GAGvC,MAAO,aAFGf,EAA+Be,EAAG,IAAlCf,CAAuCY,EAAOC,GAE9B,IADhBb,EAA+Be,EAAG,IAAlCf,CAAuCY,EAAOC,GACpB,SAI3BK,EAAwB,SAACjB,GAAD,MAAa,CAChD,SAACkB,GAAD,OAAWA,EAAMC,OAAOnB,IACxB,SAACoB,GAAD,OAAYA,GACZ,SAACC,GAAD,OAAUA,EAAKC,YAGJC,EAAgB,SAACC,EAAQC,GAAT,OAAwBC,MAAiBF,OAAOA,GAAQG,MAAMF,I,SCxB9EG,EAAc,SAACC,GAC1B,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAWC,sBAAW,sBAAC,4BAAAC,EAAA,sEACFT,IAAQG,GADN,OACrBO,EADqB,OAE3BJ,EAAQI,GAFmB,2CAG1B,CAACP,IAMJ,OAJAQ,qBAAU,WACRJ,MACC,CAACA,IAEG,CAACF,EAAMC,IA2CHM,EAAgC,SAACP,EAAMQ,GAClD,MAAsCT,mBAAS,IAA/C,mBAAOU,EAAP,KAAoBC,EAApB,KACA,EAA+BC,YAAYF,EAAa,KAAjDG,EAAP,oBACA,EAAsCb,mBAAS,IAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KACMC,EAAmBC,mBAAQ,kBAAMC,YAAQL,KAAuB,CAACA,IAmBvE,OAjBAN,qBAAU,WACR,GAAIM,EAAsB,CACxB,IAAMM,EAAiBlB,EAAKmB,IAAIX,EAASO,IACzCD,EAAeI,QAEfJ,EAAed,KAEhB,CAACA,EAAMe,EAAkBH,EAAsBE,EAAgBN,IAElEF,qBAAU,WACRO,GACEA,EAAYM,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,cACfpD,EAAUqD,SAASC,eAAeH,GACxCnD,GAAWA,EAAQuD,aAAa,SAAUH,EAAgB,YAAc,aAE3E,CAACR,IAEG,CACLJ,cACAC,mB,eC5EEe,EAAQ,IACRC,EAAS,IACTC,EAAc,CAAC,UAAW,WAC1BC,EAAkB,YAGlBC,EAAoB,SAAC9C,GAAD,OAAOT,KAAKwD,MAAM,GAAK,IAAM/C,EAAEgD,SAAWzD,KAAK0D,KACnEC,EAAyB,SAAClD,GAAD,OAAO8C,EAAkB9C,GAAK,GAE7D,SAASmD,EAAT,GAA2C,IAAD,IDuBXC,ECvBdnC,EAAyB,EAAzBA,KAAMoC,EAAmB,EAAnBA,gBACrB,EAA0BrC,mBAAS,IAAnC,mBAAOsC,EAAP,KAAcC,EAAd,KACA,EAA0BvC,mBAAS,IAAnC,mBAAOwC,EAAP,KAAcC,EAAd,KAEMC,EAAgBzB,mBAAQ,kBAAMrB,IAAUK,GAAM,SAACjB,GAAD,OAAOA,EAAEgD,aAAU,CAAC/B,IAElE0C,EAAM/C,IAAU,qBDiBOwC,EChBdP,EDiBftB,qBAAU,WACRX,IAAU,OACPP,OAAO,QACPA,OAAO,UACPN,KAAK,KAAMqD,GACXrD,KAAK,OAAQ,KACbA,KAAK,OAAQ,GACbA,KAAK,SAAU,QACfA,KAAK,cAAe,IACpBA,KAAK,eAAgB,GACrBA,KAAK,YAAa,WAClBM,OAAO,YACPN,KAAK,IAAK,sDACVA,KAAK,OAAQ,QACb6D,MAAM,SAAU,UAClB,CAACR,IC9BJ,IAAMS,EAAgBC,iBAAO,MAEvBC,EAAuB3C,sBAAW,sBAAC,gCAAAC,EAAA,sDACnCJ,IACIuC,EAAQvC,EACR+C,EAAaC,YAAQC,YAAK,MAAOV,GACjCF,EAAQa,aACZ,SAACC,EAAD,GAAkC,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACTC,EAAaC,YACjBpC,aAAI,SAACqC,GAAD,MAAe,CACjBxE,OAAQoE,EACRnE,OAAQuE,EAASJ,UAEnBK,aAAO,SAACC,GAAD,OAAOX,EAAWW,EAAEN,UALVG,CAMjBF,GACF,MAAM,GAAN,mBAAWF,GAAX,YAAqBG,MAEvB,GACAtD,GAEFwC,EAASD,GACTD,EAASD,IAnB4B,2CAqBtC,CAACG,EAAUF,EAAUtC,IAExBM,qBAAU,WACRwC,MACC,CAACA,IAEJ,IAAMnE,GAAe,EAAA+D,EAClBiB,UAAU,QACV3D,KAAKqC,IACLuB,KAHkB,oBAGV1E,EAAsB,UAC9BJ,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBA,KAAK,eAAgB,GACrBA,KAAK,cAAc,gCAAc8C,EAAd,QACnBiC,QAEGnF,GAAe,EAAAgE,EAClBiB,UAAU,UACV3D,KAAKuC,IACLqB,KAHkB,oBAGV1E,EAAsB,YAC9BJ,KAAK,IAAK+C,GACV/C,KAAK,MAAM,SAACC,GAAD,OAAOA,EAAEqC,MACpBtC,KAAK,SAAU,eACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACf6D,MAAM,QAAQ,SAAC5D,GAAD,OAAOS,EAAciD,EAAed,EAA7BnC,CAA0CT,EAAEgD,YACjE+B,GAAG,SAAS,SAACC,EAAIhF,GAChB,IAAQiF,EAA0CjF,EAA1CiF,QAASjC,EAAiChD,EAAjCgD,QAASkC,EAAwBlF,EAAxBkF,SAAUb,EAAcrE,EAAdqE,MAAOhC,EAAOrC,EAAPqC,GACrC8C,EAAcF,EAAQ7C,KAAI,SAACgD,GAAD,gBAAeA,EAAOC,SAAtB,aAAmCD,EAAOE,YAC1EjC,EAAgB,CACd8B,cACAnC,UACAkC,WACAb,QACAhC,UA4BN,OAxBAd,qBAAU,WACRsC,EAAc0B,QAAU3E,MAErB4E,WAAW,KACXC,MAAM,SAAU7E,MAAmB8E,SAAS,IAC5CD,MACC,SACA7E,MAEG+E,EAAEjD,KACFkD,EAAEjD,MAEN8C,MAAM,OAAQ7E,MAAeyB,GAAG6B,YAAK,QACrCuB,MAAM,YAAa7E,IAAgBsC,IAEtCW,EAAc0B,QAAQ/B,MAAMA,GAAOuB,GAAG,OAAQrF,EAAOC,EAAcC,EAAc8C,EAAOC,IACxFkB,EAAc0B,QAAQE,MAAM,QAAQnC,MAAMA,KACzC,CAACE,EAAOF,EAAO3D,EAAcC,IAEhC2B,qBAAU,WACR,IAAMsE,EAAiBC,YAAW,kBAAMjC,EAAc0B,QAAQQ,SAAQ,KACtE,OAAO,kBAAMC,aAAaH,MACzB,IAGD,qBACExD,GAAG,gBACHxC,MAAO6C,EACP5C,OAAQ6C,EACRsD,QAAO,WAAK,IAAL,aAAmB,IAAnB,aAAkC,IAAlC,aAA4C,OAK1CC,qBAAK/C,GCtHdgD,G,OAAS,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAK5C,OACE,qBAAKH,UAAS,iBAAYA,GAA1B,SACE,uBAAOA,UAAU,gBAAgBG,YAAaA,EAAaF,MAAOA,EAAOG,SANxD,SAAC,GAA2B,IAAfH,EAAc,EAAxBnG,OAAUmG,MAChCC,EAASD,UAUEH,iBAAKC,G,YCqHLM,MA7Hf,WACE,MAAe3F,EAAY,iBAApBG,EAAP,oBACA,EAA0CD,mBAAS,IAAnD,mBAAO0F,EAAP,KAAsBC,EAAtB,KACA,EAAwC3F,wBAAS4F,GAAjD,mBAAOC,EAAP,KAAqBxD,EAArB,KAEA9B,qBAAU,WACR,IAAMuF,EAAc7F,EAAKmB,KAAI,gBAAGiC,EAAH,EAAGA,MAAU0C,EAAb,oCAAC,eACzBA,GADwB,IAE3B1E,GAAIgC,EACJA,aAEFsC,EAAiBG,KAChB,CAACH,EAAkB1F,IAEtB,IAqCA,EAAwCO,EAA8BkF,GApCpE,SAAC1E,GAAD,OACA,YAA6B,IAA1BK,EAAyB,EAAzBA,GAAIgC,EAAqB,EAArBA,MACC2C,EADoB,EAAd/B,QACkB7C,KAAI,gBAAGiD,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAAb,gBAA8BD,EAA9B,YAA0CC,MAAWT,KAAK,KACtFoC,EAAkB/E,YAAQ,GAAD,OAAImC,EAAJ,YAAa2C,IAE5C,MAAO,CAAE3E,KAAIC,cADS4E,YAASlF,EAAkBiF,QAgC7CvF,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eACrB,EACEH,EAA8BkF,GA7B9B,SAACS,GAAD,OACA,YAAsB,IAAnB9E,EAAkB,EAAlBA,GAAIW,EAAc,EAAdA,QAEL,MAAO,CAAEX,KAAIC,cADS8E,YAAOC,SAASF,GAAQnE,QA0B7BsE,EAArB,EAAQ5F,YAAqD6F,EAA7D,EAA6C5F,eAE7C,EAA6EH,EAC3EkF,GAxBA,SAACS,GAAD,OACA,YAAmB,IAAhB9E,EAAe,EAAfA,GAAImF,EAAW,EAAXA,KAEL,MAAO,CAAEnF,KAAIC,cADS8E,YAAOD,EAAOK,QAqBnBC,EAArB,EAAQ/F,YAA8CgG,EAAtD,EAAsC/F,eAItC,EAAqFH,EACnFkF,GArBA,SAACS,GAAD,OACA,YAAmB,IAAhB9E,EAAe,EAAfA,GAAImF,EAAW,EAAXA,KAEL,MAAO,CAAEnF,KAAIC,cADSqF,YAAGN,SAASG,GAAOH,SAASF,SAkBjCS,EAArB,EAAQlG,YAAkDmG,EAA1D,EAA0ClG,eAI1C,EAAiFH,EAC/EkF,GAlBA,SAACS,GAAD,OACA,YAAmB,IAAhB9E,EAAe,EAAfA,GAAImF,EAAW,EAAXA,KAEL,MAAO,CAAEnF,KAAIC,cADSwF,YAAGT,SAASG,GAAOH,SAASF,SAejCY,EAArB,EAAQrG,YAAgDsG,EAAxD,EAAwCrG,eAKxC,OACE,sBAAKyE,UAAU,+BAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,cAAC,EAAD,CACEG,YAAY,mBACZH,UAAU,sBACVC,MAAO3E,EACP4E,SAAU3E,IAEZ,cAAC,EAAD,CACEyE,UAAU,2BACVG,YAAY,gCACZF,MAAOiB,EACPhB,SAAUiB,IAEZ,cAAC,EAAD,CACEnB,UAAU,2BACVG,YAAY,iBACZF,MAAOoB,EACPnB,SAAUoB,IAEZ,cAAC,EAAD,CACEtB,UAAU,2BACVG,YAAY,YACZF,MAAOuB,EACPtB,SAAUuB,IAEZ,cAAC,EAAD,CACEzB,UAAU,2BACVG,YAAY,UACZF,MAAO0B,EACPzB,SAAU0B,OAGbnB,EACC,sBAAKT,UAAU,cAAf,UACE,qBAAKA,UAAU,oBAAf,SAAoCS,EAAaxC,QACjD,sBAAK+B,UAAU,cAAf,UACE,yCADF,IACmBS,EAAa1B,YAAYN,KAAK,SAEjD,sBAAKuB,UAAU,mBAAf,UACE,0CAAiB,IACiB,IAAjCS,EAAa3B,SAAS+C,OAAepB,EAAa3B,SAASL,KAAK,MAAQ,2BAI7E,sBAAKuB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,4CACA,qBAAKA,UAAU,gBAAf,iEAIN,cAAC8B,EAAD,CAAejH,KAAMyF,EAAerD,gBAAiBA,Q,2CCxHrDX,EAAQ,IACRC,GAAS,IACTC,GAAc,CAAC,UAAW,QAC1BuF,GAAmB,CAAC,UAAW,WAC/BC,GAAkB,CAAC,IAAK,IACxBC,GAAoB,CAAC,EAAG,GAUxBC,GAAsB,SAAC5H,EAAQG,GAAT,OAAmB,SAACb,GAAD,OAAOY,MAAiBF,OAAOA,GAAQG,MAAMA,EAAtCD,CAA6CZ,KAMnG,SAASmD,GAAT,GAA2C,IAAD,IAAzBlC,EAAyB,EAAzBA,KAAMoC,EAAmB,EAAnBA,gBACfM,EAAM/C,IAAU,yBAEtB,EAA0BI,mBAAS,IAAnC,mBAAOsC,EAAP,KAAcC,EAAd,KACA,EAA0BvC,mBAAS,IAAnC,mBAAOwC,EAAP,KAAcC,EAAd,KAEM8E,EAAmBtG,mBACvB,kBAAMrB,IAAU4H,YAAOC,YAAO,GAAI,CAAC,iBAAkBxH,KAAQ,SAACjB,GAAD,OAAQA,EAAE0I,QAAU,IAAIT,YACrF,CAAChH,IAGH0H,QAAQC,IAAIL,GAEZ,IAAMM,EAAoB5G,mBACxB,kBAAMrB,IAAU4H,YAAOC,YAAO,GAAI,CAAC,WAAYxH,KAAQ,SAACjB,GAAD,OAAOA,EAAE8I,iBAChE,CAAC7H,IAGG4C,EAAgBC,iBAAO,MAEvBC,EAAuB3C,sBAAW,sBAAC,8BAAAC,EAAA,sDACnCJ,GAAQ8H,YAAK9H,GAAMgH,SACfzE,EAAQgB,aACZ,SAACxE,GAAD,OAAOA,KACP,SAACA,GAAD,OAAOwI,YAAOxI,KACdgJ,aAAc,SAAC5D,EAAQ/C,GAAT,mBAAC,eACV+C,GADS,IAEZ/C,UALUmC,CAOZvD,EAAKgE,SAED3B,EAAQkB,YACZyE,aAAK,SAAC5H,EAAG6H,GAAJ,OAAWA,EAAER,QAAU,IAAIT,QAAU5G,EAAEqH,QAAU,IAAIT,UAC1D7F,aAAI,SAACpC,GAAD,mBAAC,eACAA,GADD,IAEFC,OAAQD,EAAEmJ,YACVjJ,OAAQF,EAAEoJ,mBAEZ,SAACpJ,GAAD,OAAOwI,YAAOxI,KAPFwE,CAQZvD,EAAKoI,eAEP5F,EAASD,GACTD,EAASD,IAtB4B,2CAwBtC,CAACG,EAAUF,EAAUtC,IAExBM,qBAAU,WACRwC,MACC,CAACA,IAEJ,IAAMnE,GAAe,EAAA+D,EAClBiB,UAAU,QACV3D,KAAKqC,IACLuB,KAHkB,oBAGV1E,EAAsB,UAC9ByD,MAAM,UAAU,SAAC5D,GAAD,OAAOS,EAAc8H,EAAkB3F,GAAhCnC,EAA8CT,EAAE0I,QAAU,IAAIT,WACrFlI,KAAK,gBAAgB,SAACC,GAAD,OAAOY,IAAY2H,EAAkBF,GAA9BzH,EAAkDZ,EAAE0I,QAAU,IAAIT,WAC9FnD,QAEGnF,GAAe,EAAAgE,EAClBiB,UAAU,UACV3D,KAAKuC,IACLqB,KAHkB,oBAGV1E,EAAsB,YAC9BJ,KAAK,KAAK,SAACC,GAAD,OAAOsI,GAAoBO,EAAmBT,GAAvCE,CAAwDtI,EAAE8I,gBAC3E/I,KAAK,MAAM,SAACC,GAAD,OAAOA,EAAEqC,MACpBtC,KAAK,SAAU,eACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACf6D,MAAM,QAAQ,SAAC5D,GAAD,OAAOS,EAAcoI,EAAmBV,GAAjC1H,CAAmDT,EAAE8I,gBAC1E/D,GAAG,SAAS,SAACC,EAAIhF,GAChB,IAAQqF,EAAsBrF,EAAtBqF,SAAUC,EAAYtF,EAAZsF,QACZoD,EAAW1I,EAAX0I,OACNA,EAASA,EAAOtG,KAAI,SAAC2E,GACnB,IAAQ9B,EAAmB8B,EAAnB9B,QAASZ,EAAU0C,EAAV1C,MAEjB,MAAO,CACLc,YAFkBF,EAAQ7C,KAAI,SAACgD,GAAD,gBAAeA,EAAOC,SAAtB,aAAmCD,EAAOE,YAGxEjB,YAGJhB,EAAgB,CACdiG,SAAS,GAAD,OAAKjE,EAAL,aAAkBC,GAC1BoD,cAgDN,OA5CAnH,qBAAU,WACRsC,EAAc0B,QAAU3E,MAErB4E,WAAW,MACXC,MACC,SACA7E,MAEG2I,YAAY,IACZC,YAAY,KACZ9D,UAAS,SAAC1F,GAAD,OAAQA,EAAE8I,aAAe,GAAK,IAAM,OAEjDrD,MACC,SACA7E,MAEG+E,EAAEjD,KACFkD,EAAEjD,MAEN8C,MACC,OACA7E,MAEGyB,GAAG6B,YAAK,OACRuF,UAAS,SAACzJ,GAAD,OAAOY,IAAe2H,EAAkB,CAAC,GAAI,IAAtC3H,CAA2CZ,EAAE0I,OAAOT,WACpEvC,SAAS,MAEbD,MACC,YACA7E,KAAgB,SAACZ,GAAD,OAvHQU,EAuHsBmI,EAvHdhI,EAuHiCuH,GAvHvB,SAACpI,GAAD,OAChDsI,GAAoB5H,EAAQG,EAA5ByH,CAAmCtI,IAAM,EACG,EAAxCsI,GAAoB5H,EAAQG,EAA5ByH,CAAmCtI,GACK,IAAxCsI,GAAoB5H,EAAQG,EAA5ByH,CAAmCtI,KAoHiDA,EAAE8I,aAvH7D,IAACpI,EAAQG,KAuHkE6E,SAAS,KAE5GD,MACC,IACA7E,KACe,SAACZ,GAAD,OArIK,SAACU,GAA4C,IAApCG,EAAmC,uDAA3B,CAAC,IAAK,IAAK,IAAK,GAAI,GAC/D,cAAmBH,EAAnB,GAAOjB,EAAP,KAAYD,EAAZ,KACMkK,GAAYlK,EAAMC,GAAO,EACzBkK,EAAa,CAAClK,EAAKA,EAAMiK,EAAUjK,EAAM,EAAIiK,EAAUjK,EAAM,EAAIiK,EAAUlK,GACjF,OAAOoB,MAAoBC,MAAMA,GAAOH,OAAOiJ,GAiInBC,CAAoBf,EAApBe,CAAuC5J,EAAE8I,gBAC5DnD,EAAEjD,KACFkD,EAAEjD,KACF+C,SAAS,KAGhB7B,EAAc0B,QAAQ/B,MAAMA,GAAOuB,GAAG,OAAQrF,EAAOC,EAAcC,EAAc8C,EAAOC,KACxFkB,EAAc0B,QAAQE,MAAM,QAAQnC,MAAMA,KACzC,CAACE,EAAOF,EAAOK,EAAK4E,EAAkBM,EAAmBxF,EAAiB1D,EAAcC,IAGzF,qBACEwG,UAAU,qBACV/D,GAAG,oBACHxC,MAAO6C,EACP5C,OAAQ6C,GACRsD,QAAO,WAAK,IAAL,aAAmB,IAAnB,aAAkC,IAAlC,aAA4C,OAK1CC,sBAAK/C,IC7FL0G,OApEf,WACE,MAAe/I,EAAY,mBAApBG,EAAP,oBAEA,EAAwCD,wBAAS4F,GAAjD,mBAAOC,EAAP,KAAqBxD,EAArB,KAEMyG,EAA4B7H,mBAChC,kBACEuC,aACE,SAACxE,GAAD,OAAOA,KACP,SAACA,GAAD,OAAOwI,YAAOxI,KACdgJ,aAAc,SAAC5D,EAAQ/C,GAAT,mBAAC,eACV+C,GADS,IAEZ/C,UALJmC,CAOEvD,EAAKgE,WACT,CAAChE,IAGGQ,EAAWL,uBACf,SAACY,GAAD,OACE,YAAgC,IAA7BK,EAA4B,EAA5BA,GAAIgD,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACT2B,EAAkB/E,YAAQ,GAAD,OAAImD,EAAJ,YAAgBC,IAE/C,MAAO,CAAEjD,KAAIC,cADS4E,YAASlF,EAAkBiF,OAGrD,IAGF,EAAwCzF,EAA8BsI,EAA2BrI,GAAzFC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAErB,OACE,sBAAKyE,UAAU,+BAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,cAAC,EAAD,CACEG,YAAY,mBACZH,UAAU,sBACVC,MAAO3E,EACP4E,SAAU3E,MAGbkF,EACC,sBAAKT,UAAU,cAAf,UACE,qBAAKA,UAAU,oBAAf,SAAoCS,EAAayC,WACjD,sBAAKlD,UAAU,uBAAf,WACIS,EAAa6B,QAAU,IAAIT,OAD/B,SACoF,KAAtCpB,EAAa6B,QAAU,IAAIT,OAAe,GAAK,OAE7F,qBAAK7B,UAAU,mBAAf,SACGS,EAAa6B,OAAOtG,KAAI,SAAC2E,EAAOgD,GAAR,OACvB,sBAAa3D,UAAU,wBAAvB,UACE,qBAAKA,UAAU,8BAAf,SAA8CW,EAAM1C,QACpD,qBAAK+B,UAAU,iCAAf,SAAiDW,EAAM5B,YAAYN,KAAK,UAFhEkF,WAQhB,sBAAK3D,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,4CACA,qBAAKA,UAAU,gBAAf,iEAIN,cAAC4D,GAAD,CAAmB/I,KAAMA,EAAMoC,gBAAiBA,QCvDvC4G,OAdf,SAAiBC,GACf,OACE,cAAC,IAAD,CAAMC,GAAID,EAAMC,GAAhB,SACE,sBAAK/D,UAAU,OAAf,UACE,qBAAKA,UAAU,WAAWxC,MAAO,CAAEwG,gBAAgB,OAAD,OAASF,EAAMG,YAAf,QAClD,sBAAKjE,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SAA6B8D,EAAM7F,QACnC,qBAAK+B,UAAU,gBAAf,SAAgC8D,EAAMI,oBCYjCC,OAnBf,WACE,OACE,sBAAKnE,UAAU,iBAAf,UACE,cAAC,GAAD,CACE/B,MAAM,iBACNiG,SAAS,uCACTD,YAAY,0BACZF,GAAG,cAEL,cAAC,GAAD,CACE9F,MAAM,sBACNiG,SAAS,wCACTD,YAAY,8BACZF,GAAG,sBCHIK,OAVf,WACE,IAAMC,EAAOxI,mBAAQ,iBAAgC,mBAAzByI,OAAOC,SAASC,KAA4B,mBAAqB,qBAAqB,IAClH,OACE,sBAAKxE,UAAU,SAAf,UACE,sBAAMA,UAAU,eAAhB,SAAgCqE,IAChC,sBAAMrE,UAAU,kBAAhB,sD,OCiBSyE,OAjBf,WACE,OACE,qCACE,sBAAMzE,UAAU,MAAhB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0E,KAAK,IAAI5L,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAO4L,KAAK,aAAa5L,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAO4L,KAAK,iBAAiB5L,QAAS,cAAC,GAAD,aAI5C,cAAC,GAAD,QCLS6L,I,OAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MACjB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCFxBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnJ,SAASC,eAAe,SAM1BuI,M","file":"static/js/main.70d047d2.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nconst constrainPositionToBoundingBox =\n  (element, coordinate) =>\n  (boxWidth = 1000, boxHeight = 1000) => {\n    const boundary = coordinate === 'x' ? boxWidth : boxHeight;\n    return Math.max(20, Math.min(boundary - 20, element[coordinate]));\n  };\n\nexport const ticked = (nodeElements, linkElements, width, height) => () => {\n  linkElements\n    .attr('x1', (d) => constrainPositionToBoundingBox(d.source, 'x')(width, height))\n    .attr('y1', (d) => constrainPositionToBoundingBox(d.source, 'y')(width, height))\n    .attr('x2', (d) => constrainPositionToBoundingBox(d.target, 'x')(width, height))\n    .attr('y2', (d) => constrainPositionToBoundingBox(d.target, 'y')(width, height));\n\n  nodeElements.attr('transform', function (d) {\n    const x = constrainPositionToBoundingBox(d, 'x')(width, height);\n    const y = constrainPositionToBoundingBox(d, 'y')(width, height);\n    return 'translate(' + x + ',' + y + ')';\n  });\n};\n\nexport const getD3ElementLifecycle = (element) => [\n  (enter) => enter.append(element),\n  (update) => update,\n  (exit) => exit.remove(),\n];\n\nexport const getColorScale = (domain, colorRange) => d3.scaleLinear().domain(domain).range(colorRange);\n","import { useCallback, useEffect, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { toLower } from 'ramda';\nimport { useDebounce } from 'use-debounce';\n\nexport const useLoadData = (fileName) => {\n  const [data, setData] = useState([]);\n\n  const loadData = useCallback(async () => {\n    const loadedData = await d3.json(fileName);\n    setData(loadedData);\n  }, [fileName]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return [data, setData];\n};\n\nexport const useDnD = () => {\n  const dragstarted = (simulation) => (d) => {\n    simulation.restart();\n    simulation.alpha(0.7);\n    d.fx = d.x;\n    d.fy = d.y;\n  };\n\n  const dragged = () => (event, d) => {\n    d.fx = event.x;\n    d.fy = event.y;\n  };\n\n  const dragended = (simulation) => (d) => {\n    d.fx = null;\n    d.fy = null;\n    simulation.alphaTarget(0.5);\n  };\n  return { dragstarted, dragged, dragended };\n};\n\nexport const useArrowMarker = (markerId) => {\n  useEffect(() => {\n    d3.select('svg')\n      .append('defs')\n      .append('marker')\n      .attr('id', markerId)\n      .attr('refX', 9.5)\n      .attr('refY', 3)\n      .attr('orient', 'auto')\n      .attr('markerWidth', 12)\n      .attr('markerHeight', 9)\n      .attr('xoverflow', 'visible')\n      .append('svg:path')\n      .attr('d', 'M1.25 1.08359L7.33542 3L1.25 4.91641L1.25 1.08359Z')\n      .attr('fill', '#999')\n      .style('stroke', 'none');\n  }, [markerId]);\n};\n\nexport const useSearchWithNodeHighlighting = (data, searcher) => {\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput] = useDebounce(searchInput, 400);\n  const [highlighted, setHighlighted] = useState([]);\n  const lowerSearchInput = useMemo(() => toLower(debouncedSearchInput), [debouncedSearchInput]);\n\n  useEffect(() => {\n    if (debouncedSearchInput) {\n      const newHighlighted = data.map(searcher(lowerSearchInput));\n      setHighlighted(newHighlighted);\n    } else {\n      setHighlighted(data);\n    }\n  }, [data, lowerSearchInput, debouncedSearchInput, setHighlighted, searcher]);\n\n  useEffect(() => {\n    highlighted &&\n      highlighted.map(({ id, isHighlighted }) => {\n        const element = document.getElementById(id);\n        element && element.setAttribute('stroke', isHighlighted ? '#161853b8' : 'none');\n      });\n  }, [highlighted]);\n\n  return {\n    searchInput,\n    setSearchInput,\n  };\n};\n","import { useState, useEffect, useCallback, useRef, useMemo, memo } from 'react';\nimport * as d3 from 'd3';\nimport { reduce, indexBy, filter, compose, map, prop } from 'ramda';\n\nimport { ticked, getColorScale, getD3ElementLifecycle } from '../../helpers/graph';\nimport { useArrowMarker } from '../../hooks/graph';\n\nimport './Graph.scss';\n\nconst WIDTH = 1000;\nconst HEIGHT = 500;\nconst COLOR_RANGE = ['#ff4a4a', '#ad0303'];\nconst ARROW_MARKER_ID = 'arrowhead';\n\n// citation graph-related\nconst getCiteNodeRadius = (d) => Math.sqrt((10 + 100 * d.citedBy) / Math.PI);\nconst getCiteCollisionRadius = (d) => getCiteNodeRadius(d) + 5;\n\nfunction Graph({ data, setSelectedNode }) {\n  const [links, setLinks] = useState([]);\n  const [nodes, setNodes] = useState([]);\n\n  const citedByDomain = useMemo(() => d3.extent(data, (d) => d.citedBy), [data]);\n\n  const svg = d3.select('svg#citationGraph');\n  useArrowMarker(ARROW_MARKER_ID);\n\n  const simulationRef = useRef(null);\n\n  const computeNodesAndLinks = useCallback(async () => {\n    if (data) {\n      const nodes = data;\n      const nodeIdsObj = indexBy(prop('id'), nodes);\n      const links = reduce(\n        (accum, { title, citations }) => {\n          const paperLinks = compose(\n            map((citation) => ({\n              source: title,\n              target: citation.title,\n            })),\n            filter((p) => nodeIdsObj[p.title]),\n          )(citations);\n          return [...accum, ...paperLinks];\n        },\n        [],\n        data,\n      );\n      setNodes(nodes);\n      setLinks(links);\n    }\n  }, [setNodes, setLinks, data]);\n\n  useEffect(() => {\n    computeNodesAndLinks();\n  }, [computeNodesAndLinks]);\n\n  const linkElements = svg\n    .selectAll('line')\n    .data(links)\n    .join(...getD3ElementLifecycle('line'))\n    .attr('stroke', '#999')\n    .attr('stroke-opacity', 0.6)\n    .attr('stroke-width', 2)\n    .attr('marker-end', () => `url(#${ARROW_MARKER_ID})`)\n    .lower();\n\n  const nodeElements = svg\n    .selectAll('circle')\n    .data(nodes)\n    .join(...getD3ElementLifecycle('circle'))\n    .attr('r', getCiteNodeRadius)\n    .attr('id', (d) => d.id)\n    .attr('stroke', 'transparent')\n    .attr('stroke-width', 3)\n    .attr('cursor', 'pointer')\n    .style('fill', (d) => getColorScale(citedByDomain, COLOR_RANGE)(d.citedBy))\n    .on('click', (ev, d) => {\n      const { authors, citedBy, keywords, title, id } = d;\n      const authorNames = authors.map((author) => `${author.forename}. ${author.surname}`);\n      setSelectedNode({\n        authorNames,\n        citedBy,\n        keywords,\n        title,\n        id,\n      });\n    });\n\n  useEffect(() => {\n    simulationRef.current = d3\n      .forceSimulation()\n      .alphaDecay(0.03)\n      .force('charge', d3.forceManyBody().strength(0))\n      .force(\n        'center',\n        d3\n          .forceCenter()\n          .x(WIDTH / 2)\n          .y(HEIGHT / 2),\n      )\n      .force('link', d3.forceLink().id(prop('id')))\n      .force('collision', d3.forceCollide(getCiteCollisionRadius));\n\n    simulationRef.current.nodes(nodes).on('tick', ticked(nodeElements, linkElements, WIDTH, HEIGHT));\n    simulationRef.current.force('link').links(links);\n  }, [nodes, links, nodeElements, linkElements]);\n\n  useEffect(() => {\n    const simulationStop = setTimeout(() => simulationRef.current.stop(), 5000);\n    return () => clearTimeout(simulationStop);\n  }, []);\n\n  return (\n    <svg\n      id=\"citationGraph\"\n      width={WIDTH}\n      height={HEIGHT}\n      viewBox={`${-WIDTH / 2} ${-HEIGHT / 2} ${-WIDTH} ${-HEIGHT}`}\n    />\n  );\n}\n\nexport default memo(Graph);\n","import { memo } from 'react';\n\nimport './Search.scss';\n\nconst Search = ({ className, value, setValue, placeholder }) => {\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  return (\n    <div className={`Search ${className}`}>\n      <input className=\"Search__input\" placeholder={placeholder} value={value} onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default memo(Search);\n","import { useState, useEffect } from 'react';\nimport { toLower, includes, equals, gt, lt } from 'ramda';\n\nimport CitationGraph from '../Graph/CitationGraph';\nimport Search from '../Search';\n\nimport { useLoadData, useSearchWithNodeHighlighting } from '../../hooks/graph';\n\nfunction CitationPage() {\n  const [data] = useLoadData('citeData.json');\n  const [formattedData, setFormattedData] = useState('');\n  const [selectedNode, setSelectedNode] = useState(undefined);\n\n  useEffect(() => {\n    const updatedData = data.map(({ title, ...paper }) => ({\n      ...paper,\n      id: title,\n      title,\n    }));\n    setFormattedData(updatedData);\n  }, [setFormattedData, data]);\n\n  const searcher =\n    (lowerSearchInput) =>\n    ({ id, title, authors }) => {\n      const authorsString = authors.map(({ forename, surname }) => `${forename} ${surname}`).join(' ');\n      const stringToCompare = toLower(`${title} ${authorsString}`);\n      const isHighlighted = includes(lowerSearchInput, stringToCompare);\n      return { id, isHighlighted };\n    };\n\n  const searcherNumberOfCitations =\n    (input) =>\n    ({ id, citedBy }) => {\n      const isHighlighted = equals(parseInt(input), citedBy);\n      return { id, isHighlighted };\n    };\n\n  const searchYear =\n    (input) =>\n    ({ id, year }) => {\n      const isHighlighted = equals(input, year);\n      return { id, isHighlighted };\n    };\n\n  const searchYearFrom =\n    (input) =>\n    ({ id, year }) => {\n      const isHighlighted = gt(parseInt(year), parseInt(input));\n      return { id, isHighlighted };\n    };\n\n  const searchYearTo =\n    (input) =>\n    ({ id, year }) => {\n      const isHighlighted = lt(parseInt(year), parseInt(input));\n      return { id, isHighlighted };\n    };\n\n  const { searchInput, setSearchInput } = useSearchWithNodeHighlighting(formattedData, searcher);\n  const { searchInput: numberOfCitationsInput, setSearchInput: setNumberOfCitationsInput } =\n    useSearchWithNodeHighlighting(formattedData, searcherNumberOfCitations);\n  const { searchInput: yearSearchInput, setSearchInput: setYearSearchInput } = useSearchWithNodeHighlighting(\n    formattedData,\n    searchYear,\n  );\n  const { searchInput: yearFromSearchInput, setSearchInput: setYearFromSearchInput } = useSearchWithNodeHighlighting(\n    formattedData,\n    searchYearFrom,\n  );\n  const { searchInput: yearToSearchInput, setSearchInput: setYearToSearchInput } = useSearchWithNodeHighlighting(\n    formattedData,\n    searchYearTo,\n  );\n\n  return (\n    <div className=\"coauthorship-graph-container\">\n      <div className=\"coauthorship-results\">\n        <div className=\"coauthorship-filter-container\">\n          <Search\n            placeholder=\"Search by author\"\n            className=\"coauthorship-search\"\n            value={searchInput}\n            setValue={setSearchInput}\n          />\n          <Search\n            className=\"coauthorship-search mt-2\"\n            placeholder=\"Search by number of citations\"\n            value={numberOfCitationsInput}\n            setValue={setNumberOfCitationsInput}\n          />\n          <Search\n            className=\"coauthorship-search mt-2\"\n            placeholder=\"Search by year\"\n            value={yearSearchInput}\n            setValue={setYearSearchInput}\n          />\n          <Search\n            className=\"coauthorship-search mt-2\"\n            placeholder=\"Year from\"\n            value={yearFromSearchInput}\n            setValue={setYearFromSearchInput}\n          />\n          <Search\n            className=\"coauthorship-search mt-2\"\n            placeholder=\"Year to\"\n            value={yearToSearchInput}\n            setValue={setYearToSearchInput}\n          />\n        </div>\n        {selectedNode ? (\n          <div className=\"author-info\">\n            <div className=\"author-info-title\">{selectedNode.title}</div>\n            <div className=\"author-list\">\n              <b>Authors:</b> {selectedNode.authorNames.join(', ')}\n            </div>\n            <div className=\"author-list mt-2\">\n              <b>Keywords:</b>{' '}\n              {selectedNode.keywords.length !== 0 ? selectedNode.keywords.join(', ') : 'No keywords found!'}\n            </div>\n          </div>\n        ) : (\n          <div className=\"item\">\n            <div className=\"item-title\">No coauthorship node selected.</div>\n            <div className=\"item-subtitle\">Click on a red node to view more information.</div>\n          </div>\n        )}\n      </div>\n      <CitationGraph data={formattedData} setSelectedNode={setSelectedNode} />\n    </div>\n  );\n}\n\nexport default CitationPage;\n","import { useState, useEffect, useCallback, useRef, useMemo, memo } from 'react';\nimport * as d3 from 'd3';\nimport { pathOr, keys, compose, map, prop, values, mapObjIndexed, sort } from 'ramda';\n\nimport { ticked, getColorScale, getD3ElementLifecycle } from '../../helpers/graph';\n\nimport './Graph.scss';\n\nconst WIDTH = 1000;\nconst HEIGHT = 800;\nconst COLOR_RANGE = ['#CCCCCC', 'blue'];\nconst NODE_COLOR_RANGE = ['#ff4a4a', '#ad0303'];\nconst NODE_SIZE_RANGE = [2.5, 12];\nconst STROKE_SIZE_RANGE = [1, 8];\n\nconst radialPositionScale = (domain, range = [600, 240, 120, 30, 1]) => {\n  const [min, max] = domain;\n  const tQuarter = (max - min) / 4;\n  const thresholds = [min, min + tQuarter, min + 2 * tQuarter, min + 3 * tQuarter, max];\n  return d3.scaleThreshold().range(range).domain(thresholds);\n};\n\n// citation graph-related\nconst getAuthorNodeRadius = (domain, range) => (d) => d3.scaleLinear().domain(domain).range(range)(d);\nconst getCiteCollisionRadius = (domain, range) => (d) =>\n  getAuthorNodeRadius(domain, range)(d) >= 4\n    ? getAuthorNodeRadius(domain, range)(d) * 5\n    : getAuthorNodeRadius(domain, range)(d) * 2.5;\n\nfunction Graph({ data, setSelectedNode }) {\n  const svg = d3.select('svg#coauthorshipGraph');\n\n  const [links, setLinks] = useState([]);\n  const [nodes, setNodes] = useState([]);\n\n  const authorshipDomain = useMemo(\n    () => d3.extent(values(pathOr({}, ['coauthorships'], data)), (d) => (d.papers || []).length),\n    [data],\n  );\n\n  console.log(authorshipDomain);\n\n  const papersCountDomain = useMemo(\n    () => d3.extent(values(pathOr({}, ['authors'], data)), (d) => d.papersCount),\n    [data],\n  );\n\n  const simulationRef = useRef(null);\n\n  const computeNodesAndLinks = useCallback(async () => {\n    if (data && keys(data).length) {\n      const nodes = compose(\n        (d) => d,\n        (d) => values(d),\n        mapObjIndexed((author, id) => ({\n          ...author,\n          id,\n        })),\n      )(data.authors);\n\n      const links = compose(\n        sort((a, b) => (b.papers || []).length - (a.papers || []).length),\n        map((d) => ({\n          ...d,\n          source: d.firstAuthor,\n          target: d.secondAuthor,\n        })),\n        (d) => values(d),\n      )(data.coauthorships);\n\n      setNodes(nodes);\n      setLinks(links);\n    }\n  }, [setNodes, setLinks, data]);\n\n  useEffect(() => {\n    computeNodesAndLinks();\n  }, [computeNodesAndLinks]);\n\n  const linkElements = svg\n    .selectAll('line')\n    .data(links)\n    .join(...getD3ElementLifecycle('line'))\n    .style('stroke', (d) => getColorScale(authorshipDomain, COLOR_RANGE)((d.papers || []).length))\n    .attr('stroke-width', (d) => d3.scaleLog(authorshipDomain, STROKE_SIZE_RANGE)((d.papers || []).length))\n    .lower();\n\n  const nodeElements = svg\n    .selectAll('circle')\n    .data(nodes)\n    .join(...getD3ElementLifecycle('circle'))\n    .attr('r', (d) => getAuthorNodeRadius(papersCountDomain, NODE_SIZE_RANGE)(d.papersCount))\n    .attr('id', (d) => d.id)\n    .attr('stroke', 'transparent')\n    .attr('stroke-width', 3)\n    .attr('cursor', 'pointer')\n    .style('fill', (d) => getColorScale(papersCountDomain, NODE_COLOR_RANGE)(d.papersCount))\n    .on('click', (ev, d) => {\n      const { forename, surname } = d;\n      let { papers } = d;\n      papers = papers.map((paper) => {\n        const { authors, title } = paper;\n        const authorNames = authors.map((author) => `${author.forename}. ${author.surname}`);\n        return {\n          authorNames,\n          title,\n        };\n      });\n      setSelectedNode({\n        fullName: `${forename}. ${surname}`,\n        papers,\n      });\n    });\n\n  useEffect(() => {\n    simulationRef.current = d3\n      .forceSimulation()\n      .alphaDecay(0.015)\n      .force(\n        'charge',\n        d3\n          .forceManyBody()\n          .distanceMin(20)\n          .distanceMax(200)\n          .strength((d) => (d.papersCount >= 4 ? -10 : -40)),\n      )\n      .force(\n        'center',\n        d3\n          .forceCenter()\n          .x(WIDTH / 2)\n          .y(HEIGHT / 2),\n      )\n      .force(\n        'link',\n        d3\n          .forceLink()\n          .id(prop('id'))\n          .distance((d) => d3.scaleLinear(authorshipDomain, [20, 70])(d.papers.length))\n          .strength(0.35),\n      )\n      .force(\n        'collision',\n        d3.forceCollide((d) => getCiteCollisionRadius(papersCountDomain, NODE_SIZE_RANGE)(d.papersCount)).strength(0.5),\n      )\n      .force(\n        'r',\n        d3\n          .forceRadial((d) => radialPositionScale(papersCountDomain)(d.papersCount))\n          .x(WIDTH / 2)\n          .y(HEIGHT / 2)\n          .strength(0.8),\n      );\n\n    simulationRef.current.nodes(nodes).on('tick', ticked(nodeElements, linkElements, WIDTH, HEIGHT));\n    simulationRef.current.force('link').links(links);\n  }, [nodes, links, svg, authorshipDomain, papersCountDomain, setSelectedNode, nodeElements, linkElements]);\n\n  return (\n    <svg\n      className=\"coauthorship-graph\"\n      id=\"coauthorshipGraph\"\n      width={WIDTH}\n      height={HEIGHT}\n      viewBox={`${-WIDTH / 2} ${-HEIGHT / 2} ${-WIDTH} ${-HEIGHT}`}\n    />\n  );\n}\n\nexport default memo(Graph);\n","import { useState, useMemo, useCallback } from 'react';\nimport { compose, values, mapObjIndexed, toLower, includes } from 'ramda';\n\nimport { useLoadData, useSearchWithNodeHighlighting } from '../../hooks/graph';\n\nimport CoauthorshipGraph from '../Graph/CoauthorshipGraph';\nimport Search from '../Search';\n\nfunction CoauthorshipPage() {\n  const [data] = useLoadData('authorData.json');\n\n  const [selectedNode, setSelectedNode] = useState(undefined);\n\n  const formattedAuthorsForSearch = useMemo(\n    () =>\n      compose(\n        (d) => d,\n        (d) => values(d),\n        mapObjIndexed((author, id) => ({\n          ...author,\n          id,\n        })),\n      )(data.authors),\n    [data],\n  );\n\n  const searcher = useCallback(\n    (lowerSearchInput) =>\n      ({ id, forename, surname }) => {\n        const stringToCompare = toLower(`${forename} ${surname}`);\n        const isHighlighted = includes(lowerSearchInput, stringToCompare);\n        return { id, isHighlighted };\n      },\n    [],\n  );\n\n  const { searchInput, setSearchInput } = useSearchWithNodeHighlighting(formattedAuthorsForSearch, searcher);\n\n  return (\n    <div className=\"coauthorship-graph-container\">\n      <div className=\"coauthorship-results\">\n        <div className=\"coauthorship-filter-container\">\n          <Search\n            placeholder=\"Search by author\"\n            className=\"coauthorship-search\"\n            value={searchInput}\n            setValue={setSearchInput}\n          />\n        </div>\n        {selectedNode ? (\n          <div className=\"author-info\">\n            <div className=\"author-info-title\">{selectedNode.fullName}</div>\n            <div className=\"author-info-subtitle\">\n              {(selectedNode.papers || []).length} Paper{(selectedNode.papers || []).length === 1 ? '' : 's'}\n            </div>\n            <div className=\"author-info-list\">\n              {selectedNode.papers.map((paper, i) => (\n                <div key={i} className=\"author-info-list-item\">\n                  <div className=\"author-info-list-item-title\">{paper.title}</div>\n                  <div className=\"author-info-list-item-subtitle\">{paper.authorNames.join(', ')}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"item\">\n            <div className=\"item-title\">No coauthorship node selected.</div>\n            <div className=\"item-subtitle\">Click on a red node to view more information.</div>\n          </div>\n        )}\n      </div>\n      <CoauthorshipGraph data={data} setSelectedNode={setSelectedNode} />\n    </div>\n  );\n}\n\nexport default CoauthorshipPage;\n","import { Link } from 'react-router-dom';\n\nfunction NavCard(props) {\n  return (\n    <Link to={props.to}>\n      <div className=\"card\">\n        <div className=\"card-img\" style={{ backgroundImage: `url(${props.bannerImage})` }} />\n        <div className=\"card-body\">\n          <div className=\"card-title\">{props.title}</div>\n          <div className=\"card-subtitle\">{props.subtitle}</div>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default NavCard;\n","import NavCard from '../components/NavCard';\n\nfunction Home() {\n  return (\n    <div className=\"card-container\">\n      <NavCard\n        title=\"Citation graph\"\n        subtitle=\"Graph displaying number of citations\"\n        bannerImage=\"citationGraphBanner.png\"\n        to=\"/citation\"\n      />\n      <NavCard\n        title=\"Co-authorship graph\"\n        subtitle=\"Graph display number of coauthorships\"\n        bannerImage=\"coAuthorshipGraphBanner.png\"\n        to=\"/coauthorship\"\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","import { useMemo } from 'react';\n\nfunction Navbar() {\n  const text = useMemo(() => (window.location.hash === '#/coauthorship' ? 'Coauthorship viz' : 'Publications viz'), []);\n  return (\n    <nav className=\"navbar\">\n      <span className=\"navbar-title\">{text}</span>\n      <span className=\"navbar-subtitle\"> Nika Čić, Yaryna Korduba </span>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import { HashRouter, Route, Routes } from 'react-router-dom';\nimport CitationPage from '../DataVizPage/CitationPage';\nimport CoauthorshipPage from '../DataVizPage/CoauthorshipPage';\nimport Home from '../../views/Home';\nimport Navbar from '../../components/Navbar';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <>\n      <main className=\"app\">\n        <HashRouter>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/citation/\" element={<CitationPage />} />\n            <Route path=\"/coauthorship/\" element={<CoauthorshipPage />} />\n          </Routes>\n        </HashRouter>\n      </main>\n      <Navbar />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './commonStyles/index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}