{"version":3,"sources":["helpers/graph.js","hooks/graph.js","components/Graph/CitationGraph.js","components/Search/Search.js","components/DataVizPage/CitationPage.js","components/Graph/CoauthorshipGraph.js","components/DataVizPage/CoauthorshipPage.js","components/NavCard.js","views/Home.js","components/Navbar.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["constrainPositionToBoundingBox","element","coordinate","boxWidth","boxHeight","boundary","Math","max","min","ticked","nodeElements","linkElements","width","height","attr","d","source","target","getD3ElementLifecycle","enter","append","update","exit","remove","getColorScale","domain","colorRange","d3","range","useLoadData","fileName","useState","data","setData","loadData","useCallback","a","loadedData","useEffect","useSearchWithNodeHighlighting","searcher","searchInput","setSearchInput","useDebounce","debouncedSearchInput","highlighted","setHighlighted","lowerSearchInput","useMemo","toLower","newHighlighted","map","id","isHighlighted","document","getElementById","setAttribute","WIDTH","HEIGHT","COLOR_RANGE","ARROW_MARKER_ID","getCiteNodeRadius","sqrt","citedBy","PI","getCiteCollisionRadius","Graph","markerId","setSelectedNode","links","setLinks","nodes","setNodes","citedByDomain","svg","style","simulationRef","useRef","computeNodesAndLinks","nodeIdsObj","indexBy","prop","reduce","accum","title","citations","paperLinks","compose","citation","filter","p","selectAll","join","lower","on","ev","authors","keywords","authorNames","author","forename","surname","current","alphaDecay","force","strength","x","y","simulationStop","setTimeout","stop","clearTimeout","viewBox","memo","Search","className","value","setValue","placeholder","onChange","CitationPage","formattedData","setFormattedData","undefined","selectedNode","updatedData","paper","authorsString","stringToCompare","includes","input","equals","parseInt","numberOfCitationsInput","setNumberOfCitationsInput","year","console","log","yearSearchInput","setYearSearchInput","gt","yearFromSearchInput","setYearFromSearchInput","lt","yearToSearchInput","setYearToSearchInput","length","CitationGraph","NODE_COLOR_RANGE","getAuthorNodeRadius","authorshipDomain","values","pathOr","papers","papersCountDomain","papersCount","keys","mapObjIndexed","firstAuthor","secondAuthor","coauthorships","fullName","distanceMin","distanceMax","distance","tQuarter","thresholds","radialPositionScale","CoauthorshipPage","formattedAuthorsForSearch","i","CoauthorshipGraph","NavCard","props","to","backgroundImage","bannerImage","subtitle","Home","Navbar","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.735fc739.chunk.js","sourcesContent":["import * as d3 from 'd3';\r\n\r\nconst constrainPositionToBoundingBox =\r\n  (element, coordinate) =>\r\n  (boxWidth = 1000, boxHeight = 1000) => {\r\n    const boundary = coordinate === 'x' ? boxWidth : boxHeight;\r\n    return Math.max(20, Math.min(boundary - 20, element[coordinate]));\r\n  };\r\n\r\nexport const ticked = (nodeElements, linkElements, width, height) => () => {\r\n  linkElements\r\n    .attr('x1', (d) => constrainPositionToBoundingBox(d.source, 'x')(width, height))\r\n    .attr('y1', (d) => constrainPositionToBoundingBox(d.source, 'y')(width, height))\r\n    .attr('x2', (d) => constrainPositionToBoundingBox(d.target, 'x')(width, height))\r\n    .attr('y2', (d) => constrainPositionToBoundingBox(d.target, 'y')(width, height));\r\n\r\n  nodeElements.attr('transform', function (d) {\r\n    const x = constrainPositionToBoundingBox(d, 'x')(width, height);\r\n    const y = constrainPositionToBoundingBox(d, 'y')(width, height);\r\n    return 'translate(' + x + ',' + y + ')';\r\n  });\r\n};\r\n\r\nexport const getD3ElementLifecycle = (element) => [\r\n  (enter) => enter.append(element),\r\n  (update) => update,\r\n  (exit) => exit.remove(),\r\n];\r\n\r\nexport const getColorScale = (domain, colorRange) => d3.scaleLinear().domain(domain).range(colorRange);\r\n","import { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { toLower } from 'ramda';\r\nimport { useDebounce } from 'use-debounce';\r\n\r\nexport const useLoadData = (fileName) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const loadData = useCallback(async () => {\r\n    const loadedData = await d3.json(fileName);\r\n    setData(loadedData);\r\n  }, [fileName]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [loadData]);\r\n\r\n  return [data, setData];\r\n};\r\n\r\nexport const useDnD = () => {\r\n  const dragstarted = (simulation) => (d) => {\r\n    simulation.restart();\r\n    simulation.alpha(0.7);\r\n    d.fx = d.x;\r\n    d.fy = d.y;\r\n  };\r\n\r\n  const dragged = () => (event, d) => {\r\n    d.fx = event.x;\r\n    d.fy = event.y;\r\n  };\r\n\r\n  const dragended = (simulation) => (d) => {\r\n    d.fx = null;\r\n    d.fy = null;\r\n    simulation.alphaTarget(0.5);\r\n  };\r\n  return { dragstarted, dragged, dragended };\r\n};\r\n\r\nexport const useArrowMarker = (markerId) => {\r\n  useEffect(() => {\r\n    d3.select('svg')\r\n      .append('defs')\r\n      .append('marker')\r\n      .attr('id', markerId)\r\n      .attr('refX', 9.5)\r\n      .attr('refY', 3)\r\n      .attr('orient', 'auto')\r\n      .attr('markerWidth', 12)\r\n      .attr('markerHeight', 9)\r\n      .attr('xoverflow', 'visible')\r\n      .append('svg:path')\r\n      .attr('d', 'M1.25 1.08359L7.33542 3L1.25 4.91641L1.25 1.08359Z')\r\n      .attr('fill', '#999')\r\n      .style('stroke', 'none');\r\n  }, [markerId]);\r\n};\r\n\r\nexport const useSearchWithNodeHighlighting = (data, searcher) => {\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [debouncedSearchInput] = useDebounce(searchInput, 400);\r\n  const [highlighted, setHighlighted] = useState([]);\r\n  const lowerSearchInput = useMemo(() => toLower(debouncedSearchInput), [debouncedSearchInput]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchInput) {\r\n      const newHighlighted = data.map(searcher(lowerSearchInput));\r\n      setHighlighted(newHighlighted);\r\n    } else {\r\n      setHighlighted(data);\r\n    }\r\n  }, [data, lowerSearchInput, debouncedSearchInput, setHighlighted, searcher]);\r\n\r\n  useEffect(() => {\r\n    highlighted &&\r\n      highlighted.map(({ id, isHighlighted }) => {\r\n        const element = document.getElementById(id);\r\n        element && element.setAttribute('stroke', isHighlighted ? 'blue' : 'none');\r\n      });\r\n  }, [highlighted]);\r\n\r\n  return {\r\n    searchInput,\r\n    setSearchInput,\r\n  };\r\n};\r\n","import { useState, useEffect, useCallback, useRef, useMemo, memo } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { reduce, indexBy, filter, compose, map, prop } from 'ramda';\r\n\r\nimport { ticked, getColorScale, getD3ElementLifecycle } from '../../helpers/graph';\r\nimport { useDnD, useArrowMarker } from '../../hooks/graph';\r\n\r\nimport './Graph.scss';\r\n\r\nconst WIDTH = 1000;\r\nconst HEIGHT = 500;\r\nconst COLOR_RANGE = ['#ff4a4a', '#ad0303'];\r\nconst ARROW_MARKER_ID = 'arrowhead';\r\n\r\n// citation graph-related\r\nconst getCiteNodeRadius = (d) => Math.sqrt((10 + 100 * d.citedBy) / Math.PI);\r\nconst getCiteCollisionRadius = (d) => getCiteNodeRadius(d) + 5;\r\n\r\nfunction Graph({ data, setSelectedNode }) {\r\n  const [links, setLinks] = useState([]);\r\n  const [nodes, setNodes] = useState([]);\r\n\r\n  const citedByDomain = useMemo(() => d3.extent(data, (d) => d.citedBy), [data]);\r\n\r\n  const svg = d3.select('svg#citationGraph');\r\n  useArrowMarker(ARROW_MARKER_ID);\r\n\r\n  const simulationRef = useRef(null);\r\n  const { dragstarted, dragged, dragended } = useDnD();\r\n\r\n  const computeNodesAndLinks = useCallback(async () => {\r\n    if (data) {\r\n      const nodes = data;\r\n      const nodeIdsObj = indexBy(prop('id'), nodes);\r\n      const links = reduce(\r\n        (accum, { title, citations }) => {\r\n          const paperLinks = compose(\r\n            map((citation) => ({\r\n              source: title,\r\n              target: citation.title,\r\n            })),\r\n            filter((p) => nodeIdsObj[p.title]),\r\n          )(citations);\r\n          return [...accum, ...paperLinks];\r\n        },\r\n        [],\r\n        data,\r\n      );\r\n      setNodes(nodes);\r\n      setLinks(links);\r\n    }\r\n  }, [setNodes, setLinks, data]);\r\n\r\n  useEffect(() => {\r\n    computeNodesAndLinks();\r\n  }, [computeNodesAndLinks]);\r\n\r\n  const linkElements = svg\r\n    .selectAll('line')\r\n    .data(links)\r\n    .join(...getD3ElementLifecycle('line'))\r\n    .attr('stroke', '#999')\r\n    .attr('stroke-opacity', 0.6)\r\n    .attr('stroke-width', 2)\r\n    .attr('marker-end', () => `url(#${ARROW_MARKER_ID})`)\r\n    .lower();\r\n\r\n  const nodeElements = svg\r\n    .selectAll('circle')\r\n    .data(nodes)\r\n    .join(...getD3ElementLifecycle('circle'))\r\n    .attr('r', getCiteNodeRadius)\r\n    .attr('id', (d) => d.id)\r\n    .attr('stroke', 'transparent')\r\n    .attr('stroke-width', 3)\r\n    .style('fill', (d) => getColorScale(citedByDomain, COLOR_RANGE)(d.citedBy))\r\n    .on('click', (ev, d) => {\r\n      const { authors, citedBy, keywords, title, id } = d;\r\n      const authorNames = authors.map((author) => `${author.forename}. ${author.surname}`);\r\n      setSelectedNode({\r\n        authorNames,\r\n        citedBy,\r\n        keywords,\r\n        title,\r\n        id\r\n      });\r\n    });\r\n\r\n  useEffect(() => {\r\n    simulationRef.current = d3\r\n      .forceSimulation()\r\n      .alphaDecay(0.03)\r\n      .force('charge', d3.forceManyBody().strength(0))\r\n      .force(\r\n        'center',\r\n        d3\r\n          .forceCenter()\r\n          .x(WIDTH / 2)\r\n          .y(HEIGHT / 2),\r\n      )\r\n      .force('link', d3.forceLink().id(prop('id')))\r\n      .force('collision', d3.forceCollide(getCiteCollisionRadius));\r\n\r\n    simulationRef.current.nodes(nodes).on('tick', ticked(nodeElements, linkElements, WIDTH, HEIGHT));\r\n    simulationRef.current.force('link').links(links);\r\n  }, [nodes, links, nodeElements, linkElements]);\r\n\r\n  useEffect(() => {\r\n    const simulationStop = setTimeout(() => simulationRef.current.stop(), 5000);\r\n    return () => clearTimeout(simulationStop);\r\n  }, []);\r\n\r\n  return (\r\n    <svg\r\n      id=\"citationGraph\"\r\n      width={WIDTH}\r\n      height={HEIGHT}\r\n      viewBox={`${-WIDTH / 2} ${-HEIGHT / 2} ${-WIDTH} ${-HEIGHT}`}\r\n    />\r\n  );\r\n}\r\n\r\nexport default memo(Graph);\r\n","import { memo } from 'react';\r\n\r\nimport './Search.scss';\r\n\r\nconst Search = ({ className, value, setValue, placeholder }) => {\r\n  const handleChange = ({ target: { value } }) => {\r\n    setValue(value);\r\n  };\r\n\r\n  return (\r\n    <div className={`Search ${className}`}>\r\n      <input className=\"Search__input\" placeholder={placeholder} value={value} onChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Search);\r\n","import { useState, useEffect } from 'react';\r\nimport { toLower, includes, equals, gt, lt } from 'ramda';\r\n\r\nimport CitationGraph from '../Graph/CitationGraph';\r\nimport Search from '../Search';\r\n\r\nimport { useLoadData, useSearchWithNodeHighlighting } from '../../hooks/graph';\r\n\r\nfunction CitationPage() {\r\n  const [data] = useLoadData('citeData.json');\r\n  const [formattedData, setFormattedData] = useState('');\r\n  const [selectedNode, setSelectedNode] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const updatedData = data.map(({ title, ...paper }) => ({\r\n      ...paper,\r\n      id: title,\r\n      title,\r\n    }));\r\n    setFormattedData(updatedData);\r\n  }, [setFormattedData, data]);\r\n\r\n  const searcher =\r\n    (lowerSearchInput) =>\r\n    ({ id, title, authors }) => {\r\n      const authorsString = authors.map(({ forename, surname }) => `${forename} ${surname}`).join(' ');\r\n      const stringToCompare = toLower(`${title} ${authorsString}`);\r\n      const isHighlighted = includes(lowerSearchInput, stringToCompare);\r\n      return { id, isHighlighted };\r\n    };\r\n\r\n  const searcherNumberOfCitations =\r\n    (input) =>\r\n    ({ id, citedBy }) => {\r\n      const isHighlighted = equals(parseInt(input), citedBy);\r\n      return { id, isHighlighted };\r\n    };\r\n\r\n  const searchYear =\r\n    (input) =>\r\n    ({ id, year }) => {\r\n      console.log({ year, input });\r\n      const isHighlighted = equals(input, year);\r\n      return { id, isHighlighted };\r\n    };\r\n\r\n  const searchYearFrom =\r\n    (input) =>\r\n    ({ id, year }) => {\r\n      const isHighlighted = gt(parseInt(year), parseInt(input));\r\n      return { id, isHighlighted };\r\n    };\r\n\r\n  const searchYearTo =\r\n    (input) =>\r\n    ({ id, year }) => {\r\n      const isHighlighted = lt(parseInt(year), parseInt(input));\r\n      return { id, isHighlighted };\r\n    };\r\n\r\n  const { searchInput, setSearchInput } = useSearchWithNodeHighlighting(formattedData, searcher);\r\n  const { searchInput: numberOfCitationsInput, setSearchInput: setNumberOfCitationsInput } =\r\n    useSearchWithNodeHighlighting(formattedData, searcherNumberOfCitations);\r\n  const { searchInput: yearSearchInput, setSearchInput: setYearSearchInput } = useSearchWithNodeHighlighting(\r\n    formattedData,\r\n    searchYear,\r\n  );\r\n  const { searchInput: yearFromSearchInput, setSearchInput: setYearFromSearchInput } = useSearchWithNodeHighlighting(\r\n    formattedData,\r\n    searchYearFrom,\r\n  );\r\n  const { searchInput: yearToSearchInput, setSearchInput: setYearToSearchInput } = useSearchWithNodeHighlighting(\r\n    formattedData,\r\n    searchYearTo,\r\n  );\r\n\r\n  return (\r\n    <div className=\"coauthorship-graph-container\">\r\n      <div className=\"coauthorship-results\">\r\n        <div className=\"coauthorship-filter-container\">\r\n          <Search\r\n            placeholder=\"Search by author\"\r\n            className=\"coauthorship-search\"\r\n            value={searchInput}\r\n            setValue={setSearchInput}\r\n          />\r\n          <Search\r\n            className=\"coauthorship-search mt-2\"\r\n            placeholder=\"Search by number of citations\"\r\n            value={numberOfCitationsInput}\r\n            setValue={setNumberOfCitationsInput}\r\n          />\r\n          <Search\r\n            className=\"coauthorship-search mt-2\"\r\n            placeholder=\"Search by year\"\r\n            value={yearSearchInput}\r\n            setValue={setYearSearchInput}\r\n          />\r\n          <Search\r\n            className=\"coauthorship-search mt-2\"\r\n            placeholder=\"Year from\"\r\n            value={yearFromSearchInput}\r\n            setValue={setYearFromSearchInput}\r\n          />\r\n          <Search\r\n            className=\"coauthorship-search mt-2\"\r\n            placeholder=\"Year to\"\r\n            value={yearToSearchInput}\r\n            setValue={setYearToSearchInput}\r\n          />\r\n        </div>\r\n        {selectedNode ? (\r\n          <div className=\"author-info\">\r\n            <div className=\"author-info-title\">{selectedNode.title}</div>\r\n            <div className=\"author-list\">\r\n              <b>Authors:</b> {selectedNode.authorNames.join(', ')}\r\n            </div>\r\n            <div className=\"author-list mt-2\">\r\n              <b>Keywords:</b>{' '}\r\n              {selectedNode.keywords.length !== 0 ? selectedNode.keywords.join(', ') : 'No keywords found!'}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"item\">\r\n            <div className=\"item-title\">No coauthorship node selected.</div>\r\n            <div className=\"item-subtitle\">Click on a red node to view more information.</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <CitationGraph data={formattedData} setSelectedNode={setSelectedNode} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitationPage;\r\n","import { useState, useEffect, useCallback, useRef, useMemo, memo } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { pathOr, keys, compose, map, prop, values, mapObjIndexed } from 'ramda';\r\n\r\nimport { ticked, getColorScale, getD3ElementLifecycle } from '../../helpers/graph';\r\n\r\nimport './Graph.scss';\r\n\r\nconst WIDTH = 1000;\r\nconst HEIGHT = 800;\r\nconst COLOR_RANGE = ['#CCCCCC', 'blue'];\r\nconst NODE_COLOR_RANGE = ['#ff4a4a', '#ad0303'];\r\n\r\nconst radialPositionScale = (domain, range = [280, 210, 140, 70, 1]) => {\r\n  const [min, max] = domain;\r\n  const tQuarter = (max - min) / 4;\r\n  const thresholds = [min, min + tQuarter, min + 2 * tQuarter, min + 3 * tQuarter, max];\r\n  return d3.scaleThreshold().range(range).domain(thresholds);\r\n};\r\n\r\n// citation graph-related\r\nconst getAuthorNodeRadius =\r\n  (domain, range = [2, 10]) =>\r\n  (d) =>\r\n    d3.scaleLinear().domain(domain).range(range)(d);\r\nconst getCiteCollisionRadius =\r\n  (domain, range = [2, 10]) =>\r\n  (d) =>\r\n    getAuthorNodeRadius(domain, range)(d) > 4\r\n      ? getAuthorNodeRadius(domain, range)(d) * 3\r\n      : getAuthorNodeRadius(domain, range)(d);\r\n\r\nfunction Graph({ data, setSelectedNode }) {\r\n  const svg = d3.select('svg#coauthorshipGraph');\r\n\r\n  const [links, setLinks] = useState([]);\r\n  const [nodes, setNodes] = useState([]);\r\n\r\n  const authorshipDomain = useMemo(\r\n    () => d3.extent(values(pathOr({}, ['coauthorships'], data)), (d) => (d.papers || []).length),\r\n    [data],\r\n  );\r\n\r\n  const papersCountDomain = useMemo(\r\n    () => d3.extent(values(pathOr({}, ['authors'], data)), (d) => d.papersCount),\r\n    [data],\r\n  );\r\n\r\n  const simulationRef = useRef(null);\r\n\r\n  const computeNodesAndLinks = useCallback(async () => {\r\n    if (data && keys(data).length) {\r\n      const nodes = compose(\r\n        (d) => d,\r\n        (d) => values(d),\r\n        mapObjIndexed((author, id) => ({\r\n          ...author,\r\n          id,\r\n        })),\r\n      )(data.authors);\r\n\r\n      const links = compose(\r\n        map((d) => ({\r\n          ...d,\r\n          source: d.firstAuthor,\r\n          target: d.secondAuthor,\r\n        })),\r\n        (d) => values(d),\r\n      )(data.coauthorships);\r\n\r\n      setNodes(nodes);\r\n      setLinks(links);\r\n    }\r\n  }, [setNodes, setLinks, data]);\r\n\r\n  useEffect(() => {\r\n    computeNodesAndLinks();\r\n  }, [computeNodesAndLinks]);\r\n\r\n  const linkElements = svg\r\n    .selectAll('line')\r\n    .data(links)\r\n    .join(...getD3ElementLifecycle('line'))\r\n    .style('stroke', (d) => getColorScale(authorshipDomain, COLOR_RANGE)((d.papers || []).length))\r\n    .attr('stroke-width', (d) => d3.scaleLog(authorshipDomain, [1, 8])((d.papers || []).length))\r\n    .lower();\r\n\r\n  const nodeElements = svg\r\n    .selectAll('circle')\r\n    .data(nodes)\r\n    .join(...getD3ElementLifecycle('circle'))\r\n    .attr('r', (d) => getAuthorNodeRadius(papersCountDomain, [2, 9])(d.papersCount))\r\n    .attr('id', (d) => d.id)\r\n    .attr('stroke', 'transparent')\r\n    .attr('stroke-width', 3)\r\n    .style('fill', (d) => getColorScale(papersCountDomain, NODE_COLOR_RANGE)(d.papersCount))\r\n    .on('click', (ev, d) => {\r\n      const { forename, surname } = d;\r\n      let { papers } = d;\r\n      papers = papers.map((paper) => {\r\n        const { authors, title } = paper;\r\n        const authorNames = authors.map((author) => `${author.forename}. ${author.surname}`);\r\n        return {\r\n          authorNames,\r\n          title,\r\n        };\r\n      });\r\n      setSelectedNode({\r\n        fullName: `${forename}. ${surname}`,\r\n        papers,\r\n      });\r\n    });\r\n  useEffect(() => {\r\n    simulationRef.current = d3\r\n      .forceSimulation()\r\n      .alphaDecay(0.03)\r\n      .force('charge', d3.forceManyBody().distanceMin(3).distanceMax(50).strength(-50))\r\n      .force(\r\n        'center',\r\n        d3\r\n          .forceCenter()\r\n          .x(WIDTH / 2)\r\n          .y(HEIGHT / 2),\r\n      )\r\n      .force(\r\n        'link',\r\n        d3\r\n          .forceLink()\r\n          .id(prop('id'))\r\n          .distance((d) =>\r\n            d.source.papersCount + d.target.papersCount <= 4\r\n              ? 3\r\n              : d3.scaleLinear(authorshipDomain, [4, 50])(d.source.papersCount + d.target.papersCount),\r\n          )\r\n          .strength(0.5),\r\n      )\r\n      .force(\r\n        'collision',\r\n        d3.forceCollide((d) => getCiteCollisionRadius(papersCountDomain, [3, 9])(d.papersCount)).strength(0.25),\r\n      )\r\n      .force(\r\n        'r',\r\n        d3\r\n          .forceRadial((d) => radialPositionScale(papersCountDomain)(d.papersCount))\r\n          .x(WIDTH / 2)\r\n          .y(HEIGHT / 2)\r\n          .strength(1),\r\n      );\r\n\r\n    simulationRef.current.nodes(nodes).on('tick', ticked(nodeElements, linkElements, WIDTH, HEIGHT));\r\n    simulationRef.current.force('link').links(links);\r\n  }, [nodes, links, svg, authorshipDomain, papersCountDomain, setSelectedNode, nodeElements, linkElements]);\r\n\r\n  return (\r\n    <svg\r\n      className=\"coauthorship-graph\"\r\n      id=\"coauthorshipGraph\"\r\n      width={WIDTH}\r\n      height={HEIGHT}\r\n      viewBox={`${-WIDTH / 2} ${-HEIGHT / 2} ${-WIDTH} ${-HEIGHT}`}\r\n    />\r\n  );\r\n}\r\n\r\nexport default memo(Graph);\r\n","import { useState, useMemo, useCallback } from 'react';\r\nimport { compose, values, mapObjIndexed, toLower, includes } from 'ramda';\r\n\r\nimport { useLoadData, useSearchWithNodeHighlighting } from '../../hooks/graph';\r\n\r\nimport CoauthorshipGraph from '../Graph/CoauthorshipGraph';\r\nimport Search from '../Search';\r\n\r\nfunction CoauthorshipPage() {\r\n  const [data] = useLoadData('authorData.json');\r\n\r\n  const [selectedNode, setSelectedNode] = useState(undefined);\r\n\r\n  const formattedAuthorsForSearch = useMemo(\r\n    () =>\r\n      compose(\r\n        (d) => d,\r\n        (d) => values(d),\r\n        mapObjIndexed((author, id) => ({\r\n          ...author,\r\n          id,\r\n        })),\r\n      )(data.authors),\r\n    [data],\r\n  );\r\n\r\n  const searcher = useCallback(\r\n    (lowerSearchInput) =>\r\n      ({ id, forename, surname }) => {\r\n        const stringToCompare = toLower(`${forename} ${surname}`);\r\n        const isHighlighted = includes(lowerSearchInput, stringToCompare);\r\n        return { id, isHighlighted };\r\n      },\r\n    [],\r\n  );\r\n\r\n  const { searchInput, setSearchInput } = useSearchWithNodeHighlighting(formattedAuthorsForSearch, searcher);\r\n\r\n  return (\r\n    <div className=\"coauthorship-graph-container\">\r\n      <div className=\"coauthorship-results\">\r\n        <div className=\"coauthorship-filter-container\">\r\n          <Search\r\n            placeholder=\"Search by author\"\r\n            className=\"coauthorship-search\"\r\n            value={searchInput}\r\n            setValue={setSearchInput}\r\n          />\r\n        </div>\r\n        {selectedNode ? (\r\n          <div className=\"author-info\">\r\n            <div className=\"author-info-title\">{selectedNode.fullName}</div>\r\n            <div className=\"author-info-list\">\r\n              {selectedNode.papers.map((paper, i) => (\r\n                <div key={i} className=\"author-info-list-item\">\r\n                  <div className=\"author-info-list-item-title\">{paper.title}</div>\r\n                  <div className=\"author-info-list-item-subtitle\">{paper.authorNames.join(', ')}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"item\">\r\n            <div className=\"item-title\">No coauthorship node selected.</div>\r\n            <div className=\"item-subtitle\">Click on a red node to view more information.</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <CoauthorshipGraph data={data} setSelectedNode={setSelectedNode} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoauthorshipPage;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction NavCard(props) {\r\n  return (\r\n    <Link to={props.to}>\r\n      <div className=\"card\">\r\n        <div className=\"card-img\" style={{ backgroundImage: `url(${props.bannerImage})` }} />\r\n        <div className=\"card-body\">\r\n          <div className=\"card-title\">{props.title}</div>\r\n          <div className=\"card-subtitle\">{props.subtitle}</div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default NavCard;\r\n","import NavCard from '../components/NavCard';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <NavCard\r\n        title=\"Citation graph\"\r\n        subtitle=\"Graph displaying number of citations\"\r\n        bannerImage=\"citationGraphBanner.png\"\r\n        to=\"/citation\"\r\n      />\r\n      <NavCard\r\n        title=\"Co-authorship graph\"\r\n        subtitle=\"Graph display number of coauthorships\"\r\n        bannerImage=\"coAuthorshipGraphBanner.png\"\r\n        to=\"/coauthorship\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","function Navbar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <span className=\"navbar-title\"> Publications viz </span>\r\n      <span className=\"navbar-subtitle\"> Nika Čić, Yaryna Korduba </span>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport CitationPage from '../DataVizPage/CitationPage';\r\nimport CoauthorshipPage from '../DataVizPage/CoauthorshipPage';\r\nimport Home from '../../views/Home';\r\nimport Navbar from '../../components/Navbar';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <main className=\"app\">\r\n        <HashRouter>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/citation/\" element={<CitationPage />} />\r\n            <Route path=\"/coauthorship/\" element={<CoauthorshipPage />} />\r\n          </Routes>\r\n        </HashRouter>\r\n      </main>\r\n      <Navbar />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry);\r\n                getFID(onPerfEntry);\r\n                getFCP(onPerfEntry);\r\n                getLCP(onPerfEntry);\r\n                getTTFB(onPerfEntry);\r\n            },\r\n        );\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './commonStyles/index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}